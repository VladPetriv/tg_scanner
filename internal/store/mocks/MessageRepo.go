// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/VladPetriv/tg_scanner/internal/model"

// MessageRepo is an autogenerated mock type for the MessageRepo type
type MessageRepo struct {
	mock.Mock
}

// CreateMessage provides a mock function with given fields: message
func (_m *MessageRepo) CreateMessage(message *model.Message) (int, error) {
	ret := _m.Called(message)

	var r0 int
	if rf, ok := ret.Get(0).(func(*model.Message) int); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.Message) error); ok {
		r1 = rf(message)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMessage provides a mock function with given fields: messageID
func (_m *MessageRepo) GetMessage(messageID int) (*model.Message, error) {
	ret := _m.Called(messageID)

	var r0 *model.Message
	if rf, ok := ret.Get(0).(func(int) *model.Message); ok {
		r0 = rf(messageID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(messageID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMessageByName provides a mock function with given fields: name
func (_m *MessageRepo) GetMessageByName(name string) (*model.Message, error) {
	ret := _m.Called(name)

	var r0 *model.Message
	if rf, ok := ret.Get(0).(func(string) *model.Message); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
